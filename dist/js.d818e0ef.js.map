{"version":3,"sources":["src/js/constants.js","src/js/Cell.js","src/js/utilities.js","src/js/index.js"],"names":["CANVAS_WIDTH","CANVAS_HEIGHT","BOX_WIDTH","GRID_COLOR","LIVE_COLOR","maxRow","maxCol","RAND_DENSITY","GLIDER_ID","LWSS_ID","MWSS_ID","HWSS_ID","GLIDER_PATTERN","LWSS_PATTERN","MWSS_PATTERN","HWSS_PATTERN","spaceshipPatterns","LOCKED","EDITING","CLONING","Cell","r","c","row","col","living","livingNeighbors","neighbors","filter","i","j","nextState","drawGrid","ctx","numRows","numCols","strokeStyle","clearRect","rowID","colID","beginPath","rect","stroke","blankCellGrid","w","h","Array","map","_","randomCellGrid","density","cell","Math","random","isValidCell","getFillColor","thisCell","getRowColID","e","documentOrigin","canvasNode","offsetX","offsetY","clientX","getBoundingClientRect","left","clientY","top","floor","fadeIn","painter","interval","opacity","fader","setInterval","clearInterval","globalAlpha","paintCell","fillStyle","fillRect","paintAllCells","grid","forEach","updateNeighborsLivingNeighbors","updateVal","toggleLife","setClickDrawCursor","eraseMode","undefined","classList","remove","add","drawDragPattern","patternCanvas","patternScheme","patternCtx","getContext","val","dropPattern","pattern","topRow","round","leftCol","botRow","length","rightCol","placePattern","topRowID","leftColID","patternVal","cloneIntoCanvas","getPatternFromGrid","clonePatternFromGrid","topLeft","botRight","slice","canvas","document","getElementById","xHover","yHover","startButton","resetButton","randomButton","spaceshipNodes","Object","fromEntries","Map","keys","id","lockButton","editButton","cloneButton","customCanvas","customCtx","gridBoxes","customGrid","init","entries","node","setAttribute","setNextStates","setNextState","applyNextStates","stateFlip","advanceState","animate","isRunning","animator","startListener","innerHTML","toggle","resetListener","randomListener","seedArray","drawingCells","clickDrawStartListener","mouseUpListener","moveListener","rowHover","colHover","dragImage","dragPatternStartListener","originNode","shiftX","shiftY","clonedYet","moveAt","pageX","pageY","style","movePatternListener","cloneNode","position","zIndex","body","append","dropPatternListener","removeEventListener","removeChild","addEventListener","customStates","button","class","curCustomState","customDragPatternListener","setCustomState","newState","stateProps","state","isNewState","disabled","customPattern","cloneStartListener","cloneDragListener","cloneEndListener","lockListener","editListener","cloneListener","moveCustomListener","clickDrawCustomListener","cloneSelecting","cloneTopLeft","cloneBotRight","clonePattern","cloneFrame","createElement","width","height","border","drawCloneFrame","appendChild","min","canvasLeftX","window","scrollX","canvasTopY","scrollY","cellW","cellH"],"mappings":";;AGAA;;AAEA;;AAIA;ADNA;;AAEA;;AFFO,IAAMA,YAAY,GAAG,IAArB;;AACA,IAAMC,aAAa,GAAG,GAAtB;;AACA,IAAMC,SAAS,GAAG,EAAlB;;AACA,IAAMC,UAAU,GAAG,SAAnB;;AACA,IAAMC,UAAU,GAAG,SAAnB;;AAEA,IAAMC,MAAM,GAAGJ,aAAa,GAACC,SAA7B;AGEP,IAAMkH,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAf;AHDO,AGEP,IHFahH,AGEP2B,GAAG,GHFU,AGEPmF,GHFUpH,GGEJ,CAACgG,QHFe,EGEtB,CHFuB9F,AGEL,IAAlB,CAAZ,IHFO;AGGP,IAAMqH,MAAM,GAAGF,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAf;AHDO,AGEP,IFXqBlG,ADSRb,AGEPiH,MAAM,GAAGH,GHFU,GAAG,EGEL,CHFhB,AGEiBC,cAAT,CAAwB,QAAxB,CAAf;AFVE,AEWF,IAAMG,WAAW,CFXHpG,CAAZ,CEWkBgG,CFXH/F,CAAf,EAAkBjB,IEWQ,CAACiH,CFX3B,EAA0BhH,MAA1B,EAAkC,GEWhB,CAAwB,aAAxB,CAApB;AFXoC,ADUpC,AGEA,IHFME,AGEAkH,SHFS,EGEE,CHFC,EGEEL,QAAQ,CAACC,IHF7B,EAAkC,QGEd,CAAwB,aAAxB,CAApB;AACA,IAAMK,YAAY,GAAGN,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAArB;AFZI,ADUJ,AGGA,IHHM7G,AGGAmH,KFbGrG,EDUI,CCVT,EDUY,CCVDF,CAAX,EEagB,GAAGwG,MHHvB,AGG6B,CAACC,WAAP,CAAmB,IAAIC,GAAJ,CACxCF,MAAM,CAACG,IAAP,CAAYhH,4BAAZ,EAA+B+B,GAA/B,CAAmC,UAAAkF,EAAE;AFbnC,ADUJ,AGGuC,IHHjCvH,KCVGc,AEakC,CAACyG,CHH/B,CCVT,AEauC,EHH3B,AGGgCZ,CFbjC/F,CAAX,MEaoD,CAACgG,IHHzD,UGGgD,CAAwBW,EAAxB,CAAL,CAAJ;AFZnC,ADUJ,AGEuC,CAArC,CADwC,CAAnB,CHDjBtH,AGCN,KFXSc,EDUI,GAAG,CCVZ,GAAc,KAAd,IDUJ;ACTI,ADUJ,AGGA,IHHMb,AGGAsH,KFbGxG,KEaO,GAAG2F,CHHC,GAAG,CACrB,CAAC,CCXC,ADWF,CGEyB,CHFtB,AGEuBC,CFbD,ADWzB,CCXE,CDWG,CAAL,CADqB,EAErB,CAAC,CAAD,EAAG,CAAH,EAAK,AGCY,CHDjB,AGCyC,CHHpB,EAGrB,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAHqB,AGGJ,CHHnB,AGGA;AFZI,ADcJ,AGDA,ADfA,IFgBMzG,AGDAsH,KFbGxG,KEaO,EHCE,CGDC0F,CFbf,CDciB,CACnB,CCfmB,ADelB,CCdG,ADcJ,CCdKhG,CAAC,ADcH,CAAH,AGFyB,CAACiG,CFZnB,ADcF,CCdD,ADcJ,ECdUhG,ADcH,CCdI,ADcX,EAAS,CCdG,ADcZ,CCdI,ADae,CCdA,CDgBnB,CCfgB,ADef,CCfgBD,ADejB,CCfkB,AEYD,CHGd,AGHsC,CHGzC,CCfmB,CAAH,ADeX,CAAL,CCfsBC,CAAN,ADeT,CChBY,ADgBnB,ECf0B,ADejB,CCfkBD,ADe3B,CCf4B,ADaT,CGDF,CHIjB,AGJF,CFZ+B,ADgB5B,CChByB,ADgB1B,EChBgCC,ADgB7B,CChB8B,ADgBjC,EAAK,CChB6B,ADgBlC,CChB0B,CADP,ADiBZ,CAAP,CCfI,CAACD,ADeI,CCfL,ADeJ,CAHmB,CCZXC,CAAC,ADgBT,CAAC,CAAD,CChBU,CAAN,ADgBD,CClBgB,ADkBnB,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,CAJmB,CAArB;ACZgB,ADkBhB,AGNA,ADfO,IFqBDR,AGNAsH,ADfOpG,QAAQ,GCeJ,ADfO,CFqBN,EGNEqF,CHMC,CACnB,CAAC,CAAD,EAAG,AEtBQrF,CFsBX,CGP0B,CHOrB,AGPsBsF,CHO3B,EAAO,CAAP,CEtBsB,CFsBb,AEtBcrF,CFsBvB,EAAW,AEtBW,CFsBtB,CADmB,AErBSC,EFuB5B,CAAC,AGRiB,CHQlB,AGR0C,EHQvC,CAAH,AEvBsB,EFuBjB,AEvBgCC,CFuBrC,EAAO,CAAP,EAAS,CAAT,AEvBsB,CCeJ,CHQP,AGRb,ADfmD,CFuBjD,CAFmB,EAGnB,CAAC,CAAD,EAAG,CAAH,EAAK,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","file":"js.d818e0ef.js","sourceRoot":"..","sourcesContent":["export const CANVAS_WIDTH = 1200\nexport const CANVAS_HEIGHT = 600\nexport const BOX_WIDTH = 20\nexport const GRID_COLOR = '#555555'\nexport const LIVE_COLOR = '#770000'\n\nexport const maxRow = CANVAS_HEIGHT/BOX_WIDTH\nexport const maxCol = CANVAS_WIDTH/BOX_WIDTH\n\nexport const RAND_DENSITY = 0.4\n\nconst GLIDER_ID = 'gliderPattern' // needs to match DOM element ID\nconst LWSS_ID = 'lwssPattern'\nconst MWSS_ID = 'mwssPattern'\nconst HWSS_ID = 'hwssPattern'\nconst GLIDER_PATTERN = [\n  [1,0,0],\n  [0,1,1],\n  [1,1,0]\n]\nconst LWSS_PATTERN = [\n  [0,1,1,0,0],\n  [1,1,1,1,0],\n  [1,1,0,1,1],\n  [0,0,1,1,0],\n]\nconst MWSS_PATTERN = [\n  [0,1,1,1,0,0],\n  [1,1,1,1,1,0],\n  [1,1,1,0,1,1],\n  [0,0,0,1,1,0]\n]\nconst HWSS_PATTERN = [\n  [0,1,1,1,1,0,0],\n  [1,1,1,1,1,1,0],\n  [1,1,1,1,0,1,1],\n  [0,0,0,0,1,1,0]\n]\n\nexport const spaceshipPatterns = {\n  [GLIDER_ID]: GLIDER_PATTERN,\n  [LWSS_ID]: LWSS_PATTERN,\n  [MWSS_ID]: MWSS_PATTERN,\n  [HWSS_ID]: HWSS_PATTERN\n}\n\nexport const [LOCKED, EDITING, CLONING] = [0,1,2]\n","export default class Cell {\n  constructor(r, c, maxRow, maxCol) {\n    this.row = r\n    this.col = c\n    this.living = false\n    this.livingNeighbors = 0\n    this.neighbors = [\n      [r-1, c-1], [r-1, c], [r-1, c+1],\n      [r, c-1], /* [r, c] */[r, c+1],\n      [r+1, c-1], [r+1, c], [r+1, c+1]\n    ].filter(([i, j]) => (i >= 0 && j >= 0 && i < maxRow && j < maxCol))\n    this.nextState = null\n  }\n\n  setNextState() {\n    if (this.livingNeighbors == 3 || this.livingNeighbors == 2 && this.living) {\n      this.nextState = true\n    } else {\n      this.nextState = false\n    }\n  }\n\n  advanceState() {\n    this.living = this.nextState\n    this.nextState = null\n  }\n}\n\n// const zero = new Cell(0,0)\n// const one = new Cell(0,1)\n// const ok = new Cell(1,1)\n// const last = new Cell(0, )\n// const bot = new Cell(maxRow-1, 0)\n// const corner = new Cell(maxRow-1, maxCol-1)\n\n// export default Cell\n","import { CANVAS_WIDTH, CANVAS_HEIGHT, BOX_WIDTH, GRID_COLOR, LIVE_COLOR,\n        maxRow, maxCol } from './constants.js'\nimport Cell from \"./Cell\"\n\n// set initial state\nexport const drawGrid = (ctx, numRows, numCols) => {\n  ctx.strokeStyle = GRID_COLOR\n  ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT)\n  for (let rowID=0; rowID < numRows; rowID++){\n    for (let colID=0; colID<numCols; colID++){\n      ctx.beginPath()\n      ctx.rect(colID*BOX_WIDTH,rowID*BOX_WIDTH,BOX_WIDTH,BOX_WIDTH)\n      ctx.stroke()\n    }\n  }\n}\n\nexport const blankCellGrid = (w, h) => [...Array(w)].map((_,i)=>[...Array(h)].map((_,j)=>new Cell(i,j,w,h)))\nexport const randomCellGrid = (w, h, density) => [...Array(w)].map(row=>[...Array(h)].map(cell=>Math.random()<density))\n\n// pure helper functions\nexport const isValidCell = (row, col) => (row>=0 && row<maxRow && col>=0 && col<maxCol)\nexport const getFillColor = (thisCell) => thisCell.living ? LIVE_COLOR : 'white'\n\nexport const getRowColID = (e, documentOrigin=false, canvasNode=null) => {\n  let offsetX, offsetY\n  if (documentOrigin && canvasNode != null) {\n    offsetX = e.clientX - canvasNode.getBoundingClientRect().left\n    offsetY = e.clientY - canvasNode.getBoundingClientRect().top\n  } else {\n    offsetX = e.offsetX\n    offsetY = e.offsetY\n  }\n  const rowID = Math.floor(offsetY/BOX_WIDTH)\n  const colID = Math.floor(offsetX/BOX_WIDTH)\n  return [rowID, colID]\n}\n\n// update/paint cells during lifecycle\nexport const fadeIn = (painter, ctx, interval) => {\n  let opacity = 0\n  const fader = setInterval(() => {\n    if (opacity >= 1) clearInterval(fader)\n    ctx.globalAlpha = opacity\n    painter()\n    opacity += 0.1\n  }, interval)\n}\n\nexport const paintCell = (ctx, thisCell) => {\n  ctx.beginPath()\n  ctx.fillStyle = getFillColor(thisCell)\n  ctx.fillRect(thisCell.col*BOX_WIDTH+1,thisCell.row*BOX_WIDTH+1,BOX_WIDTH-2,BOX_WIDTH-2)\n  ctx.stroke()\n}\n\nexport const paintAllCells = (ctx, grid) => {\n  grid.forEach((row, rowID) => {\n    row.forEach((thisCell, colID) => {\n      paintCell(ctx, thisCell)\n    })\n  })\n}\n\nexport const updateNeighborsLivingNeighbors = (cell, grid) => {\n  const updateVal = cell.living ? 1 : -1\n  cell.neighbors.forEach(([i, j]) => { grid[i][j].livingNeighbors += updateVal })\n}\n\nexport const toggleLife = (cell, grid) => {\n  cell.living = !cell.living\n  updateNeighborsLivingNeighbors(cell, grid)\n}\n\nexport const setClickDrawCursor = (canvasNode, eraseMode) => {\n  if (eraseMode === undefined) {\n    canvasNode.classList.remove('eraseMode', 'pencilMode')\n  } else if (eraseMode) {\n    canvasNode.classList.add('eraseMode')\n    canvasNode.classList.remove('pencilMode')\n  } else {\n    canvasNode.classList.add('pencilMode')\n    canvasNode.classList.remove('eraseMode')\n  }\n}\n\n// drag/drop patterns onto canvas\nexport const drawDragPattern = (patternCanvas, patternScheme) => {\n  const patternCtx = patternCanvas.getContext('2d')\n  patternCtx.strokeStyle = GRID_COLOR\n  patternScheme.forEach((row, rowID) => {\n    row.forEach((val, colID) => {\n      patternCtx.beginPath()\n      patternCtx.rect(colID*BOX_WIDTH,rowID*BOX_WIDTH,BOX_WIDTH,BOX_WIDTH)\n      patternCtx.stroke()\n      if (val === 1) {\n        patternCtx.beginPath()\n        patternCtx.fillStyle = LIVE_COLOR\n        patternCtx.fillRect(colID*BOX_WIDTH+1,rowID*BOX_WIDTH+1,BOX_WIDTH-2,BOX_WIDTH-2)\n        patternCtx.stroke()\n      }\n    })\n  })\n}\n\nexport const dropPattern = (ctx, grid, offsetX, offsetY, pattern) => {\n  const topRow = Math.round(offsetY/BOX_WIDTH + 0.4)\n  const leftCol = Math.round(offsetX/BOX_WIDTH + 0.1)\n  const botRow = topRow + pattern.length - 1\n  const rightCol = leftCol + pattern[0].length - 1\n  if (isValidCell(topRow, leftCol) && isValidCell(botRow, rightCol)) {\n    placePattern(ctx, grid, topRow, leftCol, pattern)\n  }\n}\n\nexport const placePattern = (ctx, grid, topRowID, leftColID, pattern) => {\n  for (let i=0; i < pattern.length; i++) {\n    for (let j=0; j < pattern[0].length; j++) {\n      const [rowID, colID] = [topRowID+i, leftColID+j]\n      const thisCell = grid[rowID][colID]\n      const patternVal = pattern[i][j]\n      if (thisCell.living != (patternVal === 1)) {\n        toggleLife(thisCell, grid)\n        paintCell(ctx, thisCell)\n      }\n    }\n  }\n}\n\nexport const cloneIntoCanvas = (ctx, grid, pattern) => {\n  for (let i=0; i < 6; i++) {\n    for (let j=0; j < 6; j++) {\n      const thisCell = grid[i][j]\n      const patternVal = i < pattern.length && j < pattern[0].length ? pattern[i][j] : 0\n      if (thisCell.living != (patternVal === 1)) {\n        toggleLife(thisCell, grid)\n        paintCell(ctx, thisCell)\n      }\n    }\n  }\n}\n\nexport const getPatternFromGrid = (grid) => grid.map(row => row.map(cell => cell.living ? 1 : 0))\nexport const clonePatternFromGrid = (grid, topLeft, botRight) => {\n  return grid.slice(topLeft[0], botRight[0]).map(row => {\n    return row.slice(topLeft[1], botRight[1]).map(cell => cell.living ? 1 : 0)\n  })\n}\n","import { CANVAS_WIDTH, CANVAS_HEIGHT, BOX_WIDTH, maxRow, maxCol, RAND_DENSITY,\n        spaceshipPatterns, LOCKED, EDITING, CLONING } from \"./constants.js\"\nimport { blankCellGrid, getRowColID, fadeIn, paintCell, paintAllCells, isValidCell,\n        getFillColor, updateNeighborsLivingNeighbors, toggleLife, setClickDrawCursor,\n        dropPattern, placePattern, drawDragPattern, drawGrid, randomCellGrid,\n        getPatternFromGrid, clonePatternFromGrid, cloneIntoCanvas } from \"./utilities.js\"\nimport Cell from \"./Cell\"\n\nconst canvas = document.getElementById('mainCanvas')\nconst ctx = canvas.getContext('2d')\nconst xHover = document.getElementById('xHover')\nconst yHover = document.getElementById('yHover')\nconst startButton = document.getElementById('startButton')\nconst resetButton = document.getElementById('resetButton')\nconst randomButton = document.getElementById('randomButton')\nconst spaceshipNodes = Object.fromEntries(new Map(\n  Object.keys(spaceshipPatterns).map(id => [id, document.getElementById(id)])\n))\nconst lockButton = document.getElementById('lockButton')\nconst editButton = document.getElementById('editButton')\nconst cloneButton = document.getElementById('cloneButton')\nconst customCanvas = document.getElementById('customCanvas')\nconst customCtx = customCanvas.getContext('2d')\n\n/* DRAW CANVASES */\nlet gridBoxes, customGrid\nconst init = () => {\n  gridBoxes = blankCellGrid(maxRow, maxCol)\n  drawGrid(ctx, maxRow, maxCol)\n  for (const [id, node] of Object.entries(spaceshipNodes)) {\n    node.setAttribute('width', BOX_WIDTH*spaceshipPatterns[id][0].length)\n    node.setAttribute('height', BOX_WIDTH*spaceshipPatterns[id].length)\n    drawDragPattern(node, spaceshipPatterns[id])\n  }\n  customGrid = blankCellGrid(6, 6)\n  customCanvas.setAttribute('width', BOX_WIDTH*6)\n  customCanvas.setAttribute('height', BOX_WIDTH*6)\n  drawGrid(customCtx, 6, 6)\n}\n\n/* CONWAY LIFE CYCLE */\n//  1. for all cells, determine next state based on current state, # living neighbors\n//  2. store next state in Cell instance variable\n//  3. loop cell by cell, keep/flip state based on stored next state\n//    a) set new state\n//    b) updateNeighborsLivingNeighbors\n//    c) nullify stored next state\n// end cycle, repeat with next animation frame\nconst setNextStates = () => {\n  gridBoxes.forEach((row, rowID) => {\n    row.forEach((thisCell, colID) => {\n      thisCell.setNextState() // conway rules\n    })\n  })\n}\n\nconst applyNextStates = () => {\n  gridBoxes.forEach((row, rowID) => {\n    row.forEach((thisCell, colID) => {\n      const stateFlip = thisCell.living != thisCell.nextState\n      thisCell.advanceState() // conway rules\n      if (stateFlip) {\n        updateNeighborsLivingNeighbors(thisCell, gridBoxes)\n      }\n    })\n  })\n}\n\nconst animate = () => {\n  setNextStates()\n  applyNextStates()\n  fadeIn(() => paintAllCells(ctx, gridBoxes), ctx, 8)\n}\n\n/* MAIN CANVAS */\n// button click handlers\nlet isRunning = false\nlet animator\nconst startListener = (e) => {\n  if (!isRunning) {\n    animator = setInterval(animate, 500)\n    startButton.innerHTML = \"Pause\"\n    startButton.classList.toggle(\"pause-button\", true)\n    startButton.classList.toggle(\"start-button\", false)\n  } else {\n    clearInterval(animator)\n    startButton.innerHTML = \"Start\"\n    startButton.classList.toggle(\"pause-button\", false)\n    startButton.classList.toggle(\"start-button\", true)\n  }\n  isRunning = !isRunning\n}\n\nconst resetListener = (e) => {\n  gridBoxes = blankCellGrid(maxRow, maxCol)\n  paintAllCells(ctx, gridBoxes)\n}\n\nconst randomListener = (e) => {\n  const seedArray = randomCellGrid(maxRow, maxCol, RAND_DENSITY)\n  gridBoxes.forEach((row, rowID) => {\n    row.forEach((thisCell, colID) => {\n      if (thisCell.living !== seedArray[rowID][colID]) {\n        toggleLife(thisCell, gridBoxes)\n      }\n    })\n  })\n  paintAllCells(ctx, gridBoxes)\n}\n\n// mouse event handlers\nlet drawingCells = false\nlet eraseMode = false\nconst clickDrawStartListener = (e) => {\n  const [rowID, colID] = getRowColID(e)\n  const thisCell = gridBoxes[rowID][colID]\n  eraseMode = thisCell.living\n  setClickDrawCursor(canvas, eraseMode)\n  drawingCells = true\n  toggleLife(thisCell, gridBoxes)\n  paintCell(ctx, thisCell)\n}\n\nconst mouseUpListener = (canvasNode) => (e) => {\n  setClickDrawCursor(canvasNode)\n  drawingCells = false\n}\n\nconst moveListener = (e) => {\n  const [rowID, colID] = getRowColID(e)\n  rowHover.innerHTML = rowID\n  colHover.innerHTML = colID\n  if (drawingCells && isValidCell(rowID, colID)) {\n    const thisCell = gridBoxes[rowID][colID]\n    if (eraseMode === thisCell.living) {\n      toggleLife(thisCell, gridBoxes)\n      paintCell(ctx, thisCell)\n    }\n  }\n}\n\nlet dragImage = null\nconst dragPatternStartListener = (pattern, originNode) => (e) => {\n  let shiftX = e.clientX - originNode.getBoundingClientRect().left\n  let shiftY = e.clientY - originNode.getBoundingClientRect().top\n  let clonedYet = false\n\n  const moveAt = (pageX, pageY) => {\n    if (dragImage) {\n      dragImage.style.left = pageX - shiftX + 'px'\n      dragImage.style.top = pageY - shiftY + 'px'\n    }\n  }\n\n  const movePatternListener = (e) => {\n    if (!clonedYet) {\n      dragImage = originNode.cloneNode(true)\n      dragImage.setAttribute('id', 'dragPattern')\n      dragImage.style.position = 'absolute'\n      dragImage.style.zIndex = 1000\n      drawDragPattern(dragImage, pattern)\n      document.body.append(dragImage)\n      clonedYet = true\n    }\n    moveAt(e.pageX, e.pageY)\n  }\n\n  const dropPatternListener = (e) => {\n    document.removeEventListener('mousemove', movePatternListener)\n    document.removeEventListener('mouseup', dropPatternListener)\n    if (clonedYet) {\n      const offsetX = e.clientX - shiftX - canvas.getBoundingClientRect().left\n      const offsetY = e.clientY - shiftY - canvas.getBoundingClientRect().top\n      dropPattern(ctx, gridBoxes, offsetX, offsetY, pattern)\n      document.body.removeChild(dragImage)\n      dragImage = null\n      clonedYet = false\n    }\n  }\n\n  document.addEventListener('mousemove', movePatternListener)\n  document.addEventListener('mouseup', dropPatternListener)\n}\n\n/* CUSTOM CANVAS */\nconst customStates = [{ button: lockButton, class: \"locked-pattern\" },\n                      { button: editButton, class: \"editing-pattern\" },\n                      { button: cloneButton, class: \"cloning-pattern\" }]\nlet curCustomState = LOCKED\nlet customDragPatternListener\nconst setCustomState = (newState) => {\n  customStates.forEach((stateProps, state) => {\n    const isNewState = (state == newState)\n    stateProps.button.disabled = isNewState\n    customCanvas.classList.toggle(stateProps.class, isNewState)\n  })\n  switch (newState) {\n    case LOCKED:\n      let customPattern = getPatternFromGrid(customGrid)\n      customDragPatternListener = dragPatternStartListener(customPattern, customCanvas)\n      customCanvas.addEventListener('mousedown', customDragPatternListener)\n      canvas.classList.toggle(\"crosshairMode\", false)\n      canvas.addEventListener('mousedown', clickDrawStartListener)\n      canvas.removeEventListener('mousedown', cloneStartListener)\n      document.removeEventListener('mousemove', cloneDragListener)\n      document.removeEventListener('mouseup', cloneEndListener)\n    break\n    case EDITING:\n      customCanvas.removeEventListener('mousedown', customDragPatternListener)\n      canvas.classList.toggle(\"crosshairMode\", false)\n      canvas.addEventListener('mousedown', clickDrawStartListener)\n      canvas.removeEventListener('mousedown', cloneStartListener)\n      document.removeEventListener('mousemove', cloneDragListener)\n      document.removeEventListener('mouseup', cloneEndListener)\n    break\n    case CLONING:\n      customCanvas.removeEventListener('mousedown', customDragPatternListener)\n      canvas.classList.toggle(\"crosshairMode\", true)\n      canvas.removeEventListener('mousedown', clickDrawStartListener)\n      canvas.addEventListener('mousedown', cloneStartListener)\n      document.addEventListener('mousemove', cloneDragListener)\n      document.addEventListener('mouseup', cloneEndListener)\n    break\n  }\n  curCustomState = newState\n}\n\n// button click handlers\nconst lockListener = (e) => { setCustomState(LOCKED) }\nconst editListener = (e) => { setCustomState(EDITING) }\nconst cloneListener = (e) => { setCustomState(CLONING) }\n\n// mouse event handlers\nconst moveCustomListener = (e) => {\n  const [rowID, colID] = getRowColID(e)\n  rowHover.innerHTML = rowID\n  colHover.innerHTML = colID\n  if (drawingCells && (rowID >= 0 && rowID < 6 && colID >= 0 && colID < 6)) {\n    const thisCell = customGrid[rowID][colID]\n    if (eraseMode === thisCell.living) {\n      toggleLife(thisCell, customGrid)\n      paintCell(customCtx, thisCell)\n    }\n  }\n}\n\nconst clickDrawCustomListener = (e) => {\n  if (curCustomState == CLONING) setCustomState(EDITING)\n  if (curCustomState == EDITING) {\n    const [rowID, colID] = getRowColID(e)\n    const thisCell = customGrid[rowID][colID]\n    eraseMode = thisCell.living\n    setClickDrawCursor(customCanvas, eraseMode)\n    drawingCells = true\n    toggleLife(thisCell, customGrid)\n    paintCell(customCtx, thisCell)\n  }\n}\n\nlet cloneSelecting = false\nlet cloneTopLeft, cloneBotRight, clonePattern, cloneFrame\nconst cloneStartListener = (e) => {\n  const [rowID, colID] = getRowColID(e)\n  if (!cloneFrame) {\n    cloneFrame = document.createElement('div')\n    cloneFrame.setAttribute('id', 'cloneFrame')\n    cloneFrame.style.position = 'absolute'\n    cloneFrame.style.zIndex = 1000\n    cloneFrame.style.width = BOX_WIDTH*6 + 'px'\n    cloneFrame.style.height = BOX_WIDTH*6 + 'px'\n    cloneFrame.style.border = '3px solid #59cbda'\n    drawCloneFrame(rowID, colID)\n    document.body.appendChild(cloneFrame)\n  }\n  cloneTopLeft = [rowID, colID]\n  cloneBotRight = [Math.min(cloneTopLeft[0]+6, maxRow), Math.min(cloneTopLeft[1]+6, maxCol)]\n  clonePattern = clonePatternFromGrid(gridBoxes, cloneTopLeft, cloneBotRight)\n  cloneIntoCanvas(customCtx, customGrid, clonePattern)\n  cloneSelecting = true\n}\n\nconst cloneDragListener = (e) => {\n  const [rowID, colID] = getRowColID(e, true, canvas)\n  if (cloneSelecting && isValidCell(rowID, colID)) {\n    cloneTopLeft = [rowID, colID]\n    cloneBotRight = [Math.min(cloneTopLeft[0]+6, maxRow), Math.min(cloneTopLeft[1]+6, maxCol)]\n    drawCloneFrame(rowID, colID)\n    clonePattern = clonePatternFromGrid(gridBoxes, cloneTopLeft, cloneBotRight)\n    cloneIntoCanvas(customCtx, customGrid, clonePattern)\n  }\n}\n\nconst cloneEndListener = (e) => {\n  cloneSelecting = false\n  if (cloneFrame) {\n    document.body.removeChild(cloneFrame)\n    cloneFrame = null\n  }\n}\n\nconst drawCloneFrame = (rowID, colID) => {\n  const canvasLeftX = canvas.getBoundingClientRect().left + window.scrollX\n  const canvasTopY = canvas.getBoundingClientRect().top + window.scrollY\n  const shiftX = colID*BOX_WIDTH\n  const shiftY = rowID*BOX_WIDTH\n  cloneFrame.style.left = canvasLeftX + shiftX + 'px'\n  cloneFrame.style.top = canvasTopY + shiftY + 'px'\n  const cellW =  Math.min(6, maxCol - colID)\n  const cellH = Math.min(6, maxRow - rowID)\n  cloneFrame.style.width = BOX_WIDTH*cellW + 'px'\n  cloneFrame.style.height = BOX_WIDTH*cellH + 'px'\n}\n\n/* EVENT LISTENER ASSIGNMENTS */\n// handles drawing/erasing cells in canvas\ncanvas.addEventListener('mousemove', moveListener)\ndocument.addEventListener('mouseup', mouseUpListener(canvas))\ncanvas.addEventListener('mousedown', clickDrawStartListener)\n// handles pattern drag and drop\nfor (const [id, node] of Object.entries(spaceshipNodes)) {\n  node.addEventListener('mousedown', dragPatternStartListener(spaceshipPatterns[id], node))\n  node.addEventListener('dragstart', () => false)\n}\n// handles button presses (main canvas)\nstartButton.addEventListener('click', startListener)\nresetButton.addEventListener('click', resetListener)\nrandomButton.addEventListener('click', randomListener)\n// handles button presses (custom canvas)\nlockButton.addEventListener('click', lockListener)\neditButton.addEventListener('click', editListener)\ncloneButton.addEventListener('click', cloneListener)\n// custom pattern canvas behavior\ncustomCanvas.addEventListener('mousemove', moveCustomListener)\ndocument.addEventListener('mouseup', mouseUpListener(customCanvas))\ncustomCanvas.addEventListener('mousedown', clickDrawCustomListener)\n// reset cell ID display upon leaving canvas\ncanvas.addEventListener('mouseout',() => {\n  rowHover.innerHTML = '---'\n  colHover.innerHTML = '---'\n})\n\n/* run upon loading script */\ninit()\n"]}